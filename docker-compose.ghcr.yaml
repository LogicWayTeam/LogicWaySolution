services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-logicway}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${DB_NAME:-logicway}", "-U", "${DB_USER:-postgres}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - logicnet

  route-engine:
    restart: always
    image: ghcr.io/logicwayteam/route-engine:latest
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: route_engine.settings.prod
    ports:
      - "8001:8001"
    networks:
      - logicnet

  logicway:
    image: ghcr.io/logicwayteam/logicway:latest
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - route-engine
    environment:
      DJANGO_SETTINGS_MODULE: logicway.settings.prod
      ROUTE_ENGINE_URL: http://route-engine:8001
      DB_NAME: ${DB_NAME:-logicway}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: db
      DB_PORT: 5432
    networks:
      - logicnet

  frontend:
    restart: always
    image: ghcr.io/logicwayteam/frontend:latest
    environment:
      REACT_APP_LOGICWAY_URL: ${LOGICWAY_URL:-http://localhost:8000}
      REACT_APP_ROUTE_ENGINE_URL: ${ROUTE_ENGINE_URL:-http://localhost:8000/routing/proxy_route_engine}
    ports:
      - "3000:80"
    depends_on:
      - logicway
    networks:
      - logicnet

volumes:
  db_data:

networks:
  logicnet: